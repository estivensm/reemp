<%= form_with(model: consulting_room, local: true, :html => {class: "needs-validation", :novalidate => true}) do |form| %>
  <% if consulting_room.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(consulting_room.errors.count, "error") %> prohibited this consulting_room from being saved:</h2>

      <ul>
      <% consulting_room.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <legend>
  <% if action_name == "new" %>
    Ingresar Informacion del Consultorio
  <% else %>
    Editar Informacion del Consultorio
  <% end -%>
</legend>


<link rel="stylesheet" href="https://cdn.jsdelivr.net/leaflet/1/leaflet.css" />
<script src="https://cdn.jsdelivr.net/leaflet/1/leaflet.js"></script>

<div class="col-md-6 no-padding-left">
  <legend>Ubicacion</legend>
  <br>
  <div class="col-md-12 no-padding">
    <%= form.label "Direccion" %>

    <%= form.text_field :address, class: "form form-control", id: "validationCustom01", :required => true, :placeholder => "Ejem: Carrera 80c #34a-105" %>

    <div class="invalid-feedback">
      Requerido!
    </div>
    <br>
  </div>


  <div class="col-md-12 no-padding">
    <%= form.label "Ciudad" %>
    <%= form.text_field :city, id: "autocomplete", class: "form form-control", :placeholder => "Ciudad" %>
    <br>
  </div>


  <div class="col-md-12 no-padding-left">
      <label class="btn btn-success" onclick="buscar()">Buscar mi Ubicacion</label>
  </div>


</div>
  
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBCTHCpTg9kTvg7uBcO0wYvpA7_Tw8Lkxg&callback=initMap2">
</script>

<div class="col-md-6 no-padding-right" style="height: 350px;">
  <legend>Mapa</legend>
  <div id="map2"></div><br>
</div>

<div class="col-md-12 no-padding-left">
     <legend>Fotografias</legend>

    <div class="col-md-5">
    <%= form.label "Primera Fotografia" %>
    <%= form.file_field :first_photo, class: "form form-control", id: "img1", :required => true %>

    <div class="col-md-12" style="padding: 0px;">
        <img id="blah" src="#" alt="" />
    </div>

  </div>

  <div class="col-md-5">
    <%= form.label "Segunda Fotografia" %>
    <%= form.file_field :sub_photo, class: "form form-control", id: "img2", :required => true %>

    <div class="col-md-12"  style="padding: 0px;">
          <img id="blah1" src="#" alt="" />
    </div>

  </div> 
</div>

<!--
  <div class="field">
    <%= form.label :state %>
    <%= form.text_field :state %>
  </div>

  <div class="field">
    <%= form.label :info_state %>
    <%= form.check_box :info_state %>
  </div>
-->

  <%= form.hidden_field :user_id, :value => current_user.id  %>
  <%= form.hidden_field :reemper_id %>
  <%= form.hidden_field :lat, id: "place_latitude" %>
  <%= form.hidden_field :lng, id: "place_longitude" %>




  <div class="modal-footer col-md-12">
    <%= form.submit "Guardar", class: "btn btn-success" %>
  </div>

<% end %>


<script>

   document.addEventListener("DOMContentLoaded", function(){
    var latitud = document.getElementById("reverse-geo-lat").value
    var longitud = document.getElementById("reverse-geo-lng").value

      initMap2(latitud, longitud)
    });

    document.addEventListener("DOMContentLoaded", initMap2);

function initMap2() {
    var lat = document.getElementById('place_latitude').value;
    var lng = document.getElementById('place_longitude').value;
    
    // if not defined create default position
    if (!lat || !lng){
      <% if action_name == "edit" %>
        lat= <%= @consulting_room.lat %>;
        lng= <%= @consulting_room.lng %>;
        document.getElementById('place_latitude').value = lat;
        document.getElementById('place_longitude').value = lng;
      <% else %>
        lat= 4.0000000;
        lng=-72.0000000;
        document.getElementById('place_latitude').value = lat;
        document.getElementById('place_longitude').value = lng;
      <% end -%>
    }
    var myCoords = new google.maps.LatLng(lat, lng);
    var mapOptions = {
    center: myCoords,
    zoom: 4
    };
    var map = new google.maps.Map(document.getElementById('map2'), mapOptions);
    var marker = new google.maps.Marker({
        position: myCoords,
        animation: google.maps.Animation.DROP,
        map: map,
        draggable: true
    });
    // refresh marker position and recenter map on marker
    function refreshMarker(){
        var lat = document.getElementById('place_latitude').value;
        var lng = document.getElementById('place_longitude').value;
        var myCoords = new google.maps.LatLng(lat, lng);
        marker.setPosition(myCoords);
        map.setCenter(marker.getPosition());   
    }
    // when input values change call refreshMarker
    document.getElementById('place_latitude').onchange = refreshMarker;
    document.getElementById('place_longitude').onchange = refreshMarker;
    // when marker is dragged update input values
    marker.addListener('drag', function() {
        latlng = marker.getPosition();
        newlat=(Math.round(latlng.lat()*1000000))/1000000;
        newlng=(Math.round(latlng.lng()*1000000))/1000000;
        console.log(newlat);
        console.log(newlng);
        document.getElementById('place_latitude').value = newlat;
        document.getElementById('place_longitude').value = newlng;
    });
    // When drag ends, center (pan) the map on the marker position
    marker.addListener('dragend', function() {
        map.panTo(marker.getPosition());
			               	toastr["success"]("<b>Seleccionado</b>");   
    });
}








 function buscar(){
 	 var map, infoWindow;
      
        map = new google.maps.Map(document.getElementById('map2'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 6
        });

        infoWindow = new google.maps.InfoWindow;



   

        
     
        if (navigator.geolocation) {

            navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude

            };  

	        document.getElementById("place_latitude").value = pos.lat
	        document.getElementById("place_longitude").value = pos.lng

   	          var mapOptions = {
   					 center: pos,
   					 zoom: 4
			    };
			    var map = new google.maps.Map(document.getElementById('map2'), mapOptions);
			   	 var marker = new google.maps.Marker({
			        position: pos,
			        animation: google.maps.Animation.DROP,
			        map: map,
			        draggable: true
			    });

				function refreshMarker(){
			        var lat = document.getElementById('place_latitude').value;
			        var lng = document.getElementById('place_longitude').value;
			        //var myCoords = new google.maps.LatLng(lat, lng);
			        marker.setPosition(pos);
			        map.setCenter(marker.getPosition());   
			    }
			    // when input values change call refreshMarker
			    document.getElementById('place_latitude').onchange = refreshMarker;
			    document.getElementById('place_longitude').onchange = refreshMarker;
			    // when marker is dragged update input values
			    marker.addListener('drag', function() {
			        latlng = marker.getPosition();
			        newlat=(Math.round(latlng.lat()*1000000))/1000000;
			        newlng=(Math.round(latlng.lng()*1000000))/1000000;
			        console.log(newlat);
			        console.log(newlng);
			        document.getElementById('place_latitude').value = newlat;
			        document.getElementById('place_longitude').value = newlng;
			    });
			    // When drag ends, center (pan) the map on the marker position
			    marker.addListener('dragend', function() {
			        map.panTo(marker.getPosition());
			               	toastr["success"]("<b>Seleccionado</b>");  
			    });



            infoWindow.setPosition(pos);
            infoWindow.setContent('Aqui Estas.');
            infoWindow.open(map);
            map.setCenter(pos);
            map.setZoom(15);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }


      }
      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }



















  function readURL(input) {

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#blah').attr('src', e.target.result);
        $("#blah").fadeIn(3000);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#img1").change(function() {
    readURL(this);
  });

    function read(input) {

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#blah1').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#img2").change(function() {
    read(this);
  });









    
    </script>

    <style type="text/css">
      .map{
        border: 1px solid red;
      }

      .col-md-12 img{
        width: 295px;
        margin-top: 10px;
        border-radius: 4px;
      }

      #map-example-container {height: 266px;}

#map {
    width: 600px;
    height: 400px;
}

#map2 {
    width: 457px;
    height: 256px;
}

    .reverse-geo-controls {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }

    </style>