<%= form_with(model: consulting_room, local: true, :html => {class: "needs-validation", :novalidate => true}) do |form| %>
  <% if consulting_room.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(consulting_room.errors.count, "error") %> prohibited this consulting_room from being saved:</h2>

      <ul>
      <% consulting_room.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <legend>
  <% if action_name == "new" %>
    Ingresar Informacion del Consultorio
  <% else %>
    Editar Informacion del Consultorio
  <% end -%>
</legend>

<br>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/leaflet/1/leaflet.css" />
<script src="https://cdn.jsdelivr.net/leaflet/1/leaflet.js"></script>


<div class="col-md-6">
  <legend>Ubicacion</legend>

  <div class="col-md-12">
    <%= form.label "Direccion" %>

    <%= form.text_field :address, class: "form form-control", id: "validationCustom01", :required => true, :placeholder => "Ejem: Carrera 80c #34a-105" %>

    <div class="invalid-feedback">
      Requerido!
    </div>
    <br>
  </div>


  <div class="col-md-12">
    <%= form.label "Ciudad" %>
    <%= form.text_field :city, id: "autocomplete", class: "form form-control", :placeholder => "Ciudad" %>
    <br>
  </div>

  <div class="col-md-12">
      <label>Buscar</label>
       <input type="search" id="input-map" class="form form-control" placeholder="Where are we going?" />
  </div>

</div>

<div class="col-md-6" style="height: 400px;">
  <legend>Mapa</legend>
  <div id="map-example-container"></div><br>
</div>

<div class="col-md-10">
     <legend>Fotografias</legend>

    <div class="col-md-5">
    <%= form.label "Primera Fotografia" %>
    <%= form.file_field :first_photo, class: "form form-control", id: "img1", :required => true %>

    <div class="col-md-12" style="padding: 0px;">
        <img id="blah" src="#" alt="" />
    </div>

  </div>

  <div class="col-md-5">
    <%= form.label "Segunda Fotografia" %>
    <%= form.file_field :sub_photo, class: "form form-control", id: "img2", :required => true %>

    <div class="col-md-12"  style="padding: 0px;">
          <img id="blah1" src="#" alt="" />
    </div>

  </div> 
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>


<!--
  <div class="field">
    <%= form.label :state %>
    <%= form.text_field :state %>
  </div>

  <div class="field">
    <%= form.label :info_state %>
    <%= form.check_box :info_state %>
  </div>
-->
  <%= form.hidden_field :lat, :value => 1 %>
  <%= form.hidden_field :lng, :value => 1 %>

  <%= form.hidden_field :user_id, :value => current_user.id  %>
  <%= form.hidden_field :reemper_id %>


  <div class="modal-footer col-md-12">
    <%= form.submit "Guardar", class: "btn btn-success" %>
  </div>

<% end %>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&language=en&key=AIzaSyBCTHCpTg9kTvg7uBcO0wYvpA7_Tw8Lkxg"></script>
    <script src="https://cdn.jsdelivr.net/npm/places.js@1.15.5"></script>

<script>

(function() {
  var placesAutocomplete = places({
    appId: 'plCC6QC1KFHV',
    apiKey: '1c3b9226a5891eafe44c0f90feff3b56',
    container: document.querySelector('#input-map')
  });

  var map = L.map('map-example-container', {
    scrollWheelZoom: true,
    zoomControl: true,
            streetViewControl: true
  });

  var osmLayer = new L.TileLayer(
    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      minZoom: 1,
      maxZoom: 100
    }
  );

  var markers = [];

  map.setView(new L.LatLng(0, 0), 1);
  map.addLayer(osmLayer);

  placesAutocomplete.on('suggestions', handleOnSuggestions);
  placesAutocomplete.on('cursorchanged', handleOnCursorchanged);
  placesAutocomplete.on('change', handleOnChange);
  placesAutocomplete.on('clear', handleOnClear);

  function handleOnSuggestions(e) {
    markers.forEach(removeMarker);
    markers = [];

    if (e.suggestions.length === 0) {
      map.setView(new L.LatLng(0, 0), 1);
      return;
    }

    e.suggestions.forEach(addMarker);
    findBestZoom();
  }

  function handleOnChange(e) {
    markers
      .forEach(function(marker, markerIndex) {
        if (markerIndex === e.suggestionIndex) {
          markers = [marker];
          marker.setOpacity(1);
          findBestZoom();
        } else {
          removeMarker(marker);
        }
      });
  }

  function handleOnClear() {
    map.setView(new L.LatLng(0, 0), 1);
    markers.forEach(removeMarker);
  }

  function handleOnCursorchanged(e) {
    markers
      .forEach(function(marker, markerIndex) {
        if (markerIndex === e.suggestionIndex) {
          marker.setOpacity(1);
          marker.setZIndexOffset(1000);
        } else {
          marker.setZIndexOffset(0);
          marker.setOpacity(0.5);
        }
      });
  }

  function addMarker(suggestion) {
    var marker = L.marker(suggestion.latlng, {opacity: .4});
    marker.addTo(map);
    markers.push(marker);
  }

  function removeMarker(marker) {
    map.removeLayer(marker);
  }

  function findBestZoom() {
    var featureGroup = L.featureGroup(markers);
    map.fitBounds(featureGroup.getBounds().pad(0.5), {animate: false});
  }

})();


  function readURL(input) {

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#blah').attr('src', e.target.result);
        $("#blah").fadeIn(3000);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#img1").change(function() {
    readURL(this);
  });

    function read(input) {

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#blah1').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#img2").change(function() {
    read(this);
  });








                      
      var input = document.getElementById('autocomplete');
      var autocomplete = new google.maps.places.Autocomplete(input,{types: ['(cities)']});
      google.maps.event.addListener(autocomplete, 'place_changed', function(){
         var place = autocomplete.getPlace();
         console.log(place);
         console.log(place.name);
         //document.getElementById("place_id").value = place.place_id;
         document.getElementById("city").value = place.name;
      })



    
    </script>

    <style type="text/css">
      .map{
        border: 1px solid red;
      }

      .col-md-12 img{
        width: 295px;
        margin-top: 10px;
        border-radius: 4px;
      }

      #map-example-container {height: 300px;}

    </style>